<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombie_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intialize Variables
state = e_state.idle;

grav = 0.5;
h_speed = 0;
v_speed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI Behavior and Movement
x += h_speed;

switch (state) {
    case e_state.idle:
    {
        object_set_sprite(obj_zombie, spr_zombie_walk); 
        image_speed = 0.05;
        
        grav = 0.5;
        h_speed = 0;
        v_speed = 0;
        i = 1;
        
        /**Idle Animation
        while (i &lt; 64) {
            h_speed = 0.2;
            i++;
        } 
        while (i &gt; 64)  {
            h_speed = 0; 
            i++;
        }
        while (i &gt; 96) {
            h_speed = -0.2;
            i++;
        }
        while (i &gt; 128)  {
            h_speed = 0;
            i++;
        }
        if (i = 160) {
            i = 0; 
        }**/
        
        if (distance_to_object(obj_player) &lt; 64) {
            state = e_state.chase;
        }
    }
    break;
    case e_state.chase:
    {
        object_set_sprite(obj_zombie, spr_zombie_walk); 
        image_speed = 0.15;
    
        grav = 0.5;
        dir = sign(obj_player.x - x);
        h_speed = dir * 0.5;
        v_speed = 0;
        
        if (distance_to_object(obj_player) &gt; 128) {
            state = e_state.idle;
        }   
    }
    break;
    
}

//Collision Handling
if (place_meeting(x+h_speed, y, obj_wall)) {
    while(!place_meeting(x+sign(h_speed), y, obj_wall)) {
        x += sign(h_speed);
    }
    h_speed = -h_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
